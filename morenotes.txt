$ 


need a conscious and unconscious stm

the pattern neuron outweight must learn too
---
not both neurons should have justsnapped=true
---
bug when reading long memory
--
prediction becomes weird after 2nd snapping (kitti)
--
noise: surprise should not become worse and worse, that's literally impossible
--
weights should be different after snap:
-always active at same time -> create pattern (even is not needed?)
-same proba but not same time -> actually additive
----
pattern neurons: add existing probas from input neurons
---
recalculate co-weights
---
save and load co-weights
---
need to take co-activation into consideration for bundle prediction
current age/value is mis-calculated for bundle


java -jar JailServer

export GOOGLE_APPLICATION_CREDENTIALS=/Users/lana/Desktop/mfk/ddetox/DrJailer-9ca78901eef2.json

ya29.ElqHBOtWKUL9s6gt5ewp3pZWeGQIP-oZ8_HI7izodA0iIEQJBHV4CePepfrXkUz8oFzNUyex2HriBSLw4uCnm6htOkyiSmf_wwuce9cMGh0p3JwPHIj-gKrYK2w

curl -s -H "Content-Type: application/json" \
    -H "Authorization: Bearer ya29.ElqHBFfDMwIauUxXDHQawYlxp2CjcmGOkUUsC0tQmq0zdSM_Jkfcf5s-Bpf1gpqHX513vhoLitTuwnQv9tNc-dA9rA9uqrqe_fMcnQTuBrE1zJ8pWPpNg8SOGaU" \
    https://speech.googleapis.com/v1/speech:recognize \
    -d @sync-request.json

dream doesnt reach pattern neurons??

need a better thing than "age":
  when wrong, variability changes? or age is just fine
perf with and without patterns
radio button layer + sensors (so we can choose what we see)
see separate prediction maps?
actual computing time

need several time scales: same time scale = same level for pattern neurons
slower time scale = we can combine pattern neurons

cannot predict actions = cannot predict pattern neurons that have actions = cannot have predictions for "muted" neurons
So instead do not care that they are mute (until we have intentions?)

*save and load functions for network
could not see white in ecal
some weights are not updated after creating (individual) pattern neurons?
also too many weights remaining (probably because not updated)
why so much time to learn simple time series

1:48

今そのprojectを実際にやってるか
いいえー＞なぜ（お客様がいない/手法が大変すぎてあきらめた）
はいー＞具体的に、なに魚をどこで（どういう川、ながれ、深さが知りたい）

一般なprojectの長さとステップ


ffmpeg -i Oswald_the_Lucky_Rabbit.mp4 -ss 01:47 -r 5/1 walk/$filename%03d.bmp



mogrify -resize 10% *.png  Lanas-MacBook-Pro:Dataset_01
mogrify -chop 4x0+0+0 -gravity East *.png
mogrify -chop 30x0+0+0 -gravity West *.png 

//chop x pixels starting southeast
chop 5x10 -gravity Southeast x.JPG  

mogrify -resize 40% *.png
mogrify -chop 4x12 -gravity Northeast *.png


    ffmpeg -i Oswald_the_Lucky_Rabbit.mp4 -ss 01:47 -r 5/1 walk/$filename%03d.bmp
  convert '*.bmp[360x360+0+0]' small/%02d.bmp  

 convert 'small/*.bmp[50x>]' small/%02d.bmp 
 ffmpeg -r 5/1 -i %02d.bmp -c:v libx264 -vf fps=5/1 -pix_fmt yuv420p out.mp4 


Lanas-MacBook-Pro:small lana$ convert '*.bmp' ppm/%02d.ppm



58, 232

